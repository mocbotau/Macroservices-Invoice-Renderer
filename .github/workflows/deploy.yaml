name: Build, push, and deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and push to Docker Hub
    runs-on: arc-runner-set
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./backend/Dockerfile
            image: ${{ secrets.ORG_DOCKERHUB_USERNAME }}/${{ secrets.ORG_DOCKERHUB_REPO }}:macroservices-backend
          - dockerfile: ./frontend/Dockerfile
            image: ${{ secrets.ORG_DOCKERHUB_USERNAME }}/${{ secrets.ORG_DOCKERHUB_REPO }}:macroservices-frontend
    permissions:
      contents: read
      packages: write

    outputs:
      commit-sha: ${{ steps.extractor.outputs.short_sha }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.ORG_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKERHUB_TOKEN }}

      - name: Extract commit SHA
        id: extractor
        run: |
          echo "${{ github.sha }}" | sed -E "s|^(.{7}).*$|short_sha=\1|" >> $GITHUB_OUTPUT

      - name: Build and push to prod
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ${{ matrix.dockerfile }}

  deploy:
    name: Deploy to Kubernetes
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout infrastructure config
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.ORG_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ORG_DOCKERHUB_TOKEN }}

      - name: Set kube context
        uses: azure/k8s-set-context@v4
        with:
          method: service-account
          k8s-url: https://kube.masterofcubesau.com:6443
          k8s-secret: ${{ secrets.ORG_K3S_AUTH_TOKEN }}

      - name: Add internal chartmuseum
        run: |
          helm repo add chartmuseum https://chartmuseum.masterofcubesau.com \
          --username ${{ secrets.ORG_CHARTMUSEUM_USER }} \
          --password ${{ secrets.ORG_CHARTMUSEUM_PASS }}

      - name: Deploy application to prod
        env:
          REPO_NAME: macroservices
          COMMIT_SHA: ${{ needs.build.outputs.commit-sha }}
          DOCKERHUB_USERNAME: ${{ secrets.ORG_DOCKERHUB_USERNAME }}
          DOCKERHUB_REPO: ${{ secrets.ORG_DOCKERHUB_REPO }}
          BACKEND_API_KEY: ${{ secrets.BACKEND_API_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GITHUB_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
          I18N_NEXUS_API_KEY: ${{ secrets.I18N_NEXUS_API_KEY }}
          MAIL_PASS: ${{ secrets.MAIL_PASS }}
          MAIL_USER: ${{ vars.MAIL_USER }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXT_PUBLIC_COOKIE_KEY: ${{ secrets.NEXT_PUBLIC_COOKIE_KEY }}
        run: |
          cat infra/values.yaml | envsubst | \
          helm upgrade --install "$REPO_NAME" chartmuseum/generic-app --version 0.1.1 \
            -f - --set-file nginxConfig=config/nginx.conf \
            --namespace="$REPO_NAME-prod" --create-namespace --atomic --timeout=1m --cleanup-on-fail
